<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <script src="https://code.jquery.com/jquery-3.4.1.js"
        integrity="sha256-WpOohJOqMqqyKL9FccASB9O0KwACQJpFTUBLTYOVvVU=" crossorigin="anonymous"></script>
    <title>Document</title>
</head>

<body>
    <div>
        <input type='text' id='idInput' value='' placeholder="login ID">
        <input type='password' id='passwordInput' value='' placeholder="login PW">
        <input type='button' id='loginButton' valu='로그인'>
    </div>
    <div>
        <div>
            <span>보내는 사람 아이디 : </span>
            <input type='text' id='senderInput' value='test01'>
        </div>
        <div>
            <span>받는 사람 아이디 : </span>
            <input type='text' id='recepientInput' value='ALL'>
        </div>
        <div>
            <span>메시지 데이터 : </span>
            <input type='text' id='dataInput' value='안녕!'>
        </div>
        <br>
        <input type='button' id='sendButton' value='전송'>

        <input type='button' id='createRoom' value='방 생성'>
    </div>

    <p>결과 : </p>
    <div id='result'></div>
</body>
<script src='socket.io/socket.io.js'></script>
<script>
    $(document).ready(() => {
        connectToServer();
    });

    $('#sendButton').bind('click', (event) => {

        var sender = document.getElementById('senderInput').value;
        var recepient = document.getElementById('recepientInput').value;
        var data = document.getElementById('dataInput').value;

        var output = { sender: sender, recepient: recepient, command: 'chat', type : 'text', data: data };

        if (socket == undefined) {
            alert('서버에 연결되어 있지 않습니다. 먼저 서버에 연결하세요. ');
            return;
        }

        socket.emit('message', output);
    });

    $('#loginButton').bind('click', (event) => {

    });

    $('#createRoom').bind('click', (event) => {

    });


    println = (data) => {
        $('#result').append('<p>' + data + '<p>');
    }

    connectToServer = () => {
        var options = { 'forceNew': true };
        var url = 'http://192.168.0.40:3000';

        socket = io.connect(url, options);

        socket.on('connect', () => {
            println('웹 소켓 서버에 연결되었습니다. ');

            socket.on('message', (message) => {
                console.log(JSON.stringify(message));

                println('<p>수신 메세지 : ' + message.sender + ', ' + message.recepient + ', ' + message.command + ', ' + message.type + ', ' + message.data + '</p>');
            });
        });

        socket.on('disconnect', () => {
            println('웹 소켓 연결이 종료되었습니다. ');
        });
    }


</script>

</html>